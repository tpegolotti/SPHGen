{# ./templates/util.j2 #}

{% if jasmin != 2 -%}

void pprint_v(vtype a){
    for (int i = 0; i < _SIMD; i++){
        std::cout << a[i] << " ";
    }
    std::cout << std::endl;
}

/*
void pprint(bigint a){
    for (int i = 0; i < _L; i++){
        std::cout << a.x[i] << " ";
    }
    std::cout << std::endl;
}
*/

void pprint_bbigint(bbigint a){
    for (int i = 0; i < _L; i++){
        for (int j = 0; j < _SIMD; j++){
            std::cout << a.a[i*_SIMD+j] << " ";
        }
        std::cout << std::endl;    
    }
}

void pprint_bkey(bkey a){
    for (int i = 0; i < _LKEY; i++){
        for (int j = 0; j < _SIMD; j++){
            std::cout << a.a[i*_SIMD+j] << " ";
        }
        std::cout << std::endl;    
    }
}

/*
std::ostream&
operator<<( std::ostream& dest, __int128_t value )
{
    std::ostream::sentry s( dest );
    if ( s ) {
        __uint128_t tmp = value < 0 ? -value : value;
        char buffer[ 128 ];
        char* d = std::end( buffer );
        do
        {
            -- d;
            *d = "0123456789"[ tmp % 10 ];
            tmp /= 10;
        } while ( tmp != 0 );
        if ( value < 0 ) {
            -- d;
            *d = '-';
        }
        int len = std::end( buffer ) - d;
        if ( dest.rdbuf()->sputn( d, len ) != len ) {
            dest.setstate( std::ios_base::badbit );
        }
    }
    return dest;
}
*/
{% endif -%}